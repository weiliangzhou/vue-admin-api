<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yd.lottery.db.dao.PrizeMapper">
  <resultMap id="BaseResultMap" type="com.yd.lottery.db.domain.Prize">
    <id column="kid" jdbcType="BIGINT" property="kid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="market_price" jdbcType="INTEGER" property="marketPrice" />
    <result column="cost_price" jdbcType="INTEGER" property="costPrice" />
    <result column="img_url_1" jdbcType="VARCHAR" property="imgUrl1" />
    <result column="img_url_2" jdbcType="VARCHAR" property="imgUrl2" />
    <result column="img_url_3" jdbcType="VARCHAR" property="imgUrl3" />
    <result column="video_url" jdbcType="VARCHAR" property="videoUrl" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="draw_state" jdbcType="INTEGER" property="drawState" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="draw_time" jdbcType="TIMESTAMP" property="drawTime" />
    <result column="display_state" jdbcType="INTEGER" property="displayState" />
    <result column="limit_count_min" jdbcType="INTEGER" property="limitCountMin" />
    <result column="limit_count_max" jdbcType="INTEGER" property="limitCountMax" />
    <result column="limit_type" jdbcType="INTEGER" property="limitType" />
    <result column="activity_type" jdbcType="INTEGER" property="activityType" />
    <result column="player_count" jdbcType="INTEGER" property="playerCount" />
    <result column="player_count_init" jdbcType="INTEGER" property="playerCountInit" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    kid, `name`, market_price, cost_price, img_url_1, img_url_2, img_url_3, video_url, 
    `desc`, draw_state, start_time, end_time, draw_time, display_state, limit_count_min, 
    limit_count_max, limit_type, activity_type, player_count, player_count_init, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.yd.lottery.db.domain.PrizeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from prize
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prize
    where kid = #{kid,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from prize
    where kid = #{kid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from prize
    where kid = #{kid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yd.lottery.db.domain.PrizeExample">
    delete from prize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yd.lottery.db.domain.Prize">
    insert into prize (kid, `name`, market_price, 
      cost_price, img_url_1, img_url_2, 
      img_url_3, video_url, `desc`, 
      draw_state, start_time, end_time, 
      draw_time, display_state, limit_count_min, 
      limit_count_max, limit_type, activity_type, 
      player_count, player_count_init, create_time, 
      update_time)
    values (#{kid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{marketPrice,jdbcType=INTEGER}, 
      #{costPrice,jdbcType=INTEGER}, #{imgUrl1,jdbcType=VARCHAR}, #{imgUrl2,jdbcType=VARCHAR}, 
      #{imgUrl3,jdbcType=VARCHAR}, #{videoUrl,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{drawState,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{drawTime,jdbcType=TIMESTAMP}, #{displayState,jdbcType=INTEGER}, #{limitCountMin,jdbcType=INTEGER}, 
      #{limitCountMax,jdbcType=INTEGER}, #{limitType,jdbcType=INTEGER}, #{activityType,jdbcType=INTEGER}, 
      #{playerCount,jdbcType=INTEGER}, #{playerCountInit,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yd.lottery.db.domain.Prize">
    insert into prize
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="kid != null">
        kid,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="costPrice != null">
        cost_price,
      </if>
      <if test="imgUrl1 != null">
        img_url_1,
      </if>
      <if test="imgUrl2 != null">
        img_url_2,
      </if>
      <if test="imgUrl3 != null">
        img_url_3,
      </if>
      <if test="videoUrl != null">
        video_url,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="drawState != null">
        draw_state,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="drawTime != null">
        draw_time,
      </if>
      <if test="displayState != null">
        display_state,
      </if>
      <if test="limitCountMin != null">
        limit_count_min,
      </if>
      <if test="limitCountMax != null">
        limit_count_max,
      </if>
      <if test="limitType != null">
        limit_type,
      </if>
      <if test="activityType != null">
        activity_type,
      </if>
      <if test="playerCount != null">
        player_count,
      </if>
      <if test="playerCountInit != null">
        player_count_init,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="kid != null">
        #{kid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=INTEGER},
      </if>
      <if test="costPrice != null">
        #{costPrice,jdbcType=INTEGER},
      </if>
      <if test="imgUrl1 != null">
        #{imgUrl1,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl2 != null">
        #{imgUrl2,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl3 != null">
        #{imgUrl3,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null">
        #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="drawState != null">
        #{drawState,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="drawTime != null">
        #{drawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="displayState != null">
        #{displayState,jdbcType=INTEGER},
      </if>
      <if test="limitCountMin != null">
        #{limitCountMin,jdbcType=INTEGER},
      </if>
      <if test="limitCountMax != null">
        #{limitCountMax,jdbcType=INTEGER},
      </if>
      <if test="limitType != null">
        #{limitType,jdbcType=INTEGER},
      </if>
      <if test="activityType != null">
        #{activityType,jdbcType=INTEGER},
      </if>
      <if test="playerCount != null">
        #{playerCount,jdbcType=INTEGER},
      </if>
      <if test="playerCountInit != null">
        #{playerCountInit,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yd.lottery.db.domain.PrizeExample" resultType="java.lang.Long">
    select count(*) from prize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prize
    <set>
      <if test="record.kid != null">
        kid = #{record.kid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=INTEGER},
      </if>
      <if test="record.costPrice != null">
        cost_price = #{record.costPrice,jdbcType=INTEGER},
      </if>
      <if test="record.imgUrl1 != null">
        img_url_1 = #{record.imgUrl1,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl2 != null">
        img_url_2 = #{record.imgUrl2,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl3 != null">
        img_url_3 = #{record.imgUrl3,jdbcType=VARCHAR},
      </if>
      <if test="record.videoUrl != null">
        video_url = #{record.videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null">
        `desc` = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.drawState != null">
        draw_state = #{record.drawState,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.drawTime != null">
        draw_time = #{record.drawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.displayState != null">
        display_state = #{record.displayState,jdbcType=INTEGER},
      </if>
      <if test="record.limitCountMin != null">
        limit_count_min = #{record.limitCountMin,jdbcType=INTEGER},
      </if>
      <if test="record.limitCountMax != null">
        limit_count_max = #{record.limitCountMax,jdbcType=INTEGER},
      </if>
      <if test="record.limitType != null">
        limit_type = #{record.limitType,jdbcType=INTEGER},
      </if>
      <if test="record.activityType != null">
        activity_type = #{record.activityType,jdbcType=INTEGER},
      </if>
      <if test="record.playerCount != null">
        player_count = #{record.playerCount,jdbcType=INTEGER},
      </if>
      <if test="record.playerCountInit != null">
        player_count_init = #{record.playerCountInit,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prize
    set kid = #{record.kid,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=INTEGER},
      cost_price = #{record.costPrice,jdbcType=INTEGER},
      img_url_1 = #{record.imgUrl1,jdbcType=VARCHAR},
      img_url_2 = #{record.imgUrl2,jdbcType=VARCHAR},
      img_url_3 = #{record.imgUrl3,jdbcType=VARCHAR},
      video_url = #{record.videoUrl,jdbcType=VARCHAR},
      `desc` = #{record.desc,jdbcType=VARCHAR},
      draw_state = #{record.drawState,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      draw_time = #{record.drawTime,jdbcType=TIMESTAMP},
      display_state = #{record.displayState,jdbcType=INTEGER},
      limit_count_min = #{record.limitCountMin,jdbcType=INTEGER},
      limit_count_max = #{record.limitCountMax,jdbcType=INTEGER},
      limit_type = #{record.limitType,jdbcType=INTEGER},
      activity_type = #{record.activityType,jdbcType=INTEGER},
      player_count = #{record.playerCount,jdbcType=INTEGER},
      player_count_init = #{record.playerCountInit,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yd.lottery.db.domain.Prize">
    update prize
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=INTEGER},
      </if>
      <if test="costPrice != null">
        cost_price = #{costPrice,jdbcType=INTEGER},
      </if>
      <if test="imgUrl1 != null">
        img_url_1 = #{imgUrl1,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl2 != null">
        img_url_2 = #{imgUrl2,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl3 != null">
        img_url_3 = #{imgUrl3,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null">
        video_url = #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="drawState != null">
        draw_state = #{drawState,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="drawTime != null">
        draw_time = #{drawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="displayState != null">
        display_state = #{displayState,jdbcType=INTEGER},
      </if>
      <if test="limitCountMin != null">
        limit_count_min = #{limitCountMin,jdbcType=INTEGER},
      </if>
      <if test="limitCountMax != null">
        limit_count_max = #{limitCountMax,jdbcType=INTEGER},
      </if>
      <if test="limitType != null">
        limit_type = #{limitType,jdbcType=INTEGER},
      </if>
      <if test="activityType != null">
        activity_type = #{activityType,jdbcType=INTEGER},
      </if>
      <if test="playerCount != null">
        player_count = #{playerCount,jdbcType=INTEGER},
      </if>
      <if test="playerCountInit != null">
        player_count_init = #{playerCountInit,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where kid = #{kid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yd.lottery.db.domain.Prize">
    update prize
    set `name` = #{name,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=INTEGER},
      cost_price = #{costPrice,jdbcType=INTEGER},
      img_url_1 = #{imgUrl1,jdbcType=VARCHAR},
      img_url_2 = #{imgUrl2,jdbcType=VARCHAR},
      img_url_3 = #{imgUrl3,jdbcType=VARCHAR},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      draw_state = #{drawState,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      draw_time = #{drawTime,jdbcType=TIMESTAMP},
      display_state = #{displayState,jdbcType=INTEGER},
      limit_count_min = #{limitCountMin,jdbcType=INTEGER},
      limit_count_max = #{limitCountMax,jdbcType=INTEGER},
      limit_type = #{limitType,jdbcType=INTEGER},
      activity_type = #{activityType,jdbcType=INTEGER},
      player_count = #{playerCount,jdbcType=INTEGER},
      player_count_init = #{playerCountInit,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where kid = #{kid,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.yd.lottery.db.domain.PrizeExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from prize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from prize
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>